/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TokenSupportImport } from './routes/token-support'
import { Route as CreateTokenImport } from './routes/create-token'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectIdImport } from './routes/project.$id'
import { Route as ProfileIdImport } from './routes/profile.$id'

// Create/Update Routes

const TokenSupportRoute = TokenSupportImport.update({
  path: '/token-support',
  getParentRoute: () => rootRoute,
} as any)

const CreateTokenRoute = CreateTokenImport.update({
  path: '/create-token',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectIdRoute = ProjectIdImport.update({
  path: '/project/$id',
  getParentRoute: () => rootRoute,
} as any)

const ProfileIdRoute = ProfileIdImport.update({
  path: '/profile/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-token': {
      id: '/create-token'
      path: '/create-token'
      fullPath: '/create-token'
      preLoaderRoute: typeof CreateTokenImport
      parentRoute: typeof rootRoute
    }
    '/token-support': {
      id: '/token-support'
      path: '/token-support'
      fullPath: '/token-support'
      preLoaderRoute: typeof TokenSupportImport
      parentRoute: typeof rootRoute
    }
    '/profile/$id': {
      id: '/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof ProfileIdImport
      parentRoute: typeof rootRoute
    }
    '/project/$id': {
      id: '/project/$id'
      path: '/project/$id'
      fullPath: '/project/$id'
      preLoaderRoute: typeof ProjectIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-token': typeof CreateTokenRoute
  '/token-support': typeof TokenSupportRoute
  '/profile/$id': typeof ProfileIdRoute
  '/project/$id': typeof ProjectIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-token': typeof CreateTokenRoute
  '/token-support': typeof TokenSupportRoute
  '/profile/$id': typeof ProfileIdRoute
  '/project/$id': typeof ProjectIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-token': typeof CreateTokenRoute
  '/token-support': typeof TokenSupportRoute
  '/profile/$id': typeof ProfileIdRoute
  '/project/$id': typeof ProjectIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-token'
    | '/token-support'
    | '/profile/$id'
    | '/project/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/create-token' | '/token-support' | '/profile/$id' | '/project/$id'
  id:
    | '__root__'
    | '/'
    | '/create-token'
    | '/token-support'
    | '/profile/$id'
    | '/project/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateTokenRoute: typeof CreateTokenRoute
  TokenSupportRoute: typeof TokenSupportRoute
  ProfileIdRoute: typeof ProfileIdRoute
  ProjectIdRoute: typeof ProjectIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateTokenRoute: CreateTokenRoute,
  TokenSupportRoute: TokenSupportRoute,
  ProfileIdRoute: ProfileIdRoute,
  ProjectIdRoute: ProjectIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-token",
        "/token-support",
        "/profile/$id",
        "/project/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create-token": {
      "filePath": "create-token.tsx"
    },
    "/token-support": {
      "filePath": "token-support.tsx"
    },
    "/profile/$id": {
      "filePath": "profile.$id.tsx"
    },
    "/project/$id": {
      "filePath": "project.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
